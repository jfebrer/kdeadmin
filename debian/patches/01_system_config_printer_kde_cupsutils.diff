Description: Cope with system-config-printer split (now depends only on python-cupsutils)
Origin: vendor: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=525558#21
Bug-Debian: http://bugs.debian.org/525558

--- a/system-config-printer-kde/cmake-modules/FindSystemConfigPrinter.py
+++ b/system-config-printer-kde/cmake-modules/FindSystemConfigPrinter.py
@@ -8,7 +8,7 @@ SYSTEM_CONFIG_PRINTER_DIR = "/usr/share/
 sys.path.append (SYSTEM_CONFIG_PRINTER_DIR)
 
 try:
-    import cupshelpers.ppds, cupshelpers.cupshelpers
+    import cupsutils.ppds, cupsutils.cupshelpers
 except:
     exit(1)
 print "Groovy"
--- a/system-config-printer-kde/system-config-printer-kde.py
+++ b/system-config-printer-kde/system-config-printer-kde.py
@@ -33,11 +33,6 @@ import locale
 
 import sys, os, time, traceback, re, tempfile, httplib, thread
 
-#load modules from system-config-printer-common (debug, smburi), change path here if you have it installed elsewhere
-SYSTEM_CONFIG_PRINTER_DIR = "/usr/share/system-config-printer"
-if os.path.exists(SYSTEM_CONFIG_PRINTER_DIR + "/debug.py"):
-    sys.path.append(SYSTEM_CONFIG_PRINTER_DIR)
-
 from PyQt4.QtCore import *
 from PyQt4.QtGui import *
 from PyQt4 import uic
@@ -66,11 +61,14 @@ import cups
 cups.require ("1.9.27")
 
 # These come from system-config-printer
-import config
-import cupshelpers, options
+import cupsutils.ppds
+try:
+    import cupshelpers, options
+except ImportError:
+    from cupsutils import cupshelpers, options
 from optionwidgets import OptionWidget
-from smburi import SMBURI
-from debug import *
+from cupsutils.smburi import SMBURI
+from cupsutils.debug import *
 
 import dbus
 import dbus.mainloop.qt
@@ -898,10 +896,6 @@ class GUI(QWidget):
             # otherwise use cups' default one
             custom_testpage = None
             opt = self.ppd.findOption ("PageSize")
-            if opt:
-                print opt
-                custom_testpage = os.path.join(SYSTEM_CONFIG_PRINTER_DIR, 'testpage-%s.ps' % opt.defchoice.lower())
-                print custom_testpage
 
             if custom_testpage and os.path.exists(custom_testpage):
                 debugprint ('Printing custom test page ' + custom_testpage)
@@ -2084,10 +2078,8 @@ class NewPrinterGUI(QDialog):
         #self.connect(self.btnNCDelMember, SIGNAL("clicked()"), self.slot_btnNCDelMember_clicked)
 
         # Optionally disable downloadable driver support.
-        #if not config.DOWNLOADABLE_DRIVER_SUPPORT:
-        if True:
-            self.rbtnNPDownloadableDriverSearch.setEnabled(False)
-            self.downloadableDriverSearchFrame.hide()
+        self.rbtnNPDownloadableDriverSearch.setEnabled(False)
+        self.downloadableDriverSearchFrame.hide()
 
         """
         # Set up OpenPrinting widgets.
@@ -2297,7 +2289,7 @@ class NewPrinterGUI(QDialog):
             c = cups.Connection ()
             debugprint ("Fetching PPDs")
             ppds_dict = c.getPPDs()
-            self.ppds_result = cupshelpers.ppds.PPDs(ppds_dict,
+            self.ppds_result = cupsutils.ppds.PPDs(ppds_dict,
                                                      language=language)
             debugprint ("Closing connection (PPDs)")
             del c
@@ -2523,7 +2515,7 @@ class NewPrinterGUI(QDialog):
                         ppddict = self.ppds.getInfoFromPPDName (ppdname)
                         make_model = ppddict['ppd-make-and-model']
                         (make, model) = \
-                            cupshelpers.ppds.ppdMakeModelSplit (make_model)
+                            cupsutils.ppds.ppdMakeModelSplit (make_model)
                         self.auto_make = make
                         self.auto_model = model
                 except:
@@ -2892,7 +2884,7 @@ class NewPrinterGUI(QDialog):
         if make_and_model and not device.id:
             mk = None
             md = None
-            (mk, md) = cupshelpers.ppds.ppdMakeModelSplit (make_and_model)
+            (mk, md) = cupsutils.ppds.ppdMakeModelSplit (make_and_model)
             device.id = "MFG:" + mk + ";MDL:" + md + ";DES:" + mk + " " + md + ";"
             device.id_dict = cupshelpers.parseDeviceID (device.id)
         # Check whether the device is supported by HPLIP and replace
